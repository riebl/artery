//
// Generated file, do not edit! Created by nedtool 5.4 from /home/vadym/artery/src/artery/messages/GeoNetPacket.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __GEONETPACKET_M_H
#define __GEONETPACKET_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0504
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
	#include "artery/netw/GeoNetPacketWrapper.h"
// }}

/**
 * Class generated from <tt>/home/vadym/artery/src/artery/messages/GeoNetPacket.msg:25</tt> by nedtool.
 * <pre>
 * packet GeoNetPacket
 * {
 *     GeoNetPacketWrapper payload;
 * }
 * </pre>
 */
class GeoNetPacket : public ::omnetpp::cPacket
{
  protected:
    GeoNetPacketWrapper payload;

  private:
    void copy(const GeoNetPacket& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const GeoNetPacket&);

  public:
    GeoNetPacket(const char *name=nullptr, short kind=0);
    GeoNetPacket(const GeoNetPacket& other);
    virtual ~GeoNetPacket();
    GeoNetPacket& operator=(const GeoNetPacket& other);
    virtual GeoNetPacket *dup() const override {return new GeoNetPacket(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual GeoNetPacketWrapper& getPayload();
    virtual const GeoNetPacketWrapper& getPayload() const {return const_cast<GeoNetPacket*>(this)->getPayload();}
    virtual void setPayload(const GeoNetPacketWrapper& payload);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const GeoNetPacket& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, GeoNetPacket& obj) {obj.parsimUnpack(b);}


#endif // ifndef __GEONETPACKET_M_H

